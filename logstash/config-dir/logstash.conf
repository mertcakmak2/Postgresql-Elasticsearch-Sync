input {
    jdbc {
        jdbc_driver_class => "org.postgresql.Driver"
        jdbc_driver_library => "/usr/share/logstash/drivers/postgresql-42.2.5.jar"
        jdbc_connection_string => "jdbc:postgresql://${POSTGRES_HOST}:5432/${POSTGRES_DB}"
        jdbc_validate_connection => true
        jdbc_user => "${POSTGRES_USER}"
        jdbc_password => "${POSTGRES_PASSWORD}"
        tracking_column => "unix_ts_in_secs"
        use_column_value => true
        tracking_column_type => "numeric"
        type => "todo"
        schedule => "*/10 * * * * *"
        statement => "SELECT *, date_part('epoch', last_modified_date) AS unix_ts_in_secs FROM todos WHERE (date_part('epoch', last_modified_date) > :sql_last_value AND last_modified_date < NOW()) ORDER BY last_modified_date ASC"
    }
    jdbc {
        jdbc_driver_class => "org.postgresql.Driver"
        jdbc_driver_library => "/usr/share/logstash/drivers/postgresql-42.2.5.jar"
        jdbc_connection_string => "jdbc:postgresql://${POSTGRES_HOST}:5432/${POSTGRES_DB}"
        jdbc_validate_connection => true
        jdbc_user => "${POSTGRES_USER}"
        jdbc_password => "${POSTGRES_PASSWORD}"
        tracking_column => "unix_ts_in_secs"
        use_column_value => true
        tracking_column_type => "numeric"
        type => "user"
        schedule => "*/10 * * * * *"
        statement => "SELECT *, date_part('epoch', last_modified_date) AS unix_ts_in_secs FROM users WHERE (date_part('epoch', last_modified_date) > :sql_last_value AND last_modified_date < NOW()) ORDER BY last_modified_date ASC"
    }
}

filter {
  mutate {
    copy => { "id" => "[@metadata][_id]"}
    remove_field => ["id", "@version", "unix_ts_in_secs"]
  }
}

output {
    stdout{codec => dots}
	if [type] == "todo"{
		elasticsearch {
				hosts => ["elasticsearch:9200"]
				index => "todo_index"
				document_id => "%{[@metadata][_id]}"
		}
	}
	if [type] == "user"{
		elasticsearch {
				hosts => ["elasticsearch:9200"]
				index => "user_index"
				document_id => "%{[@metadata][_id]}"
		}
	}
}